//Easy semantic version based off describe + tags
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty', '--long'
        standardOutput = stdout
    }
    def tagVer = stdout.toString().trim()
    def semVer = (tagVer =~ /v([\d\.]+)/)[0][1]

    if (tagVer.contains('dev')) {
        semVer += "-SNAPSHOT"
    }

    return semVer
}

description = "Kryptnostic libraries for fully homomorphic encryption."
group = "com.kryptnostic"
version = getVersionName()

allprojects { 
    
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "idea"
    apply plugin: "jacoco"

    task wrapper(type: Wrapper) {
        gradleVersion = '2.3'
    }

    test {
        if (project.hasProperty('maxParallelForks')) 
            maxParallelForks = project.maxParallelForks as int
        if (project.hasProperty('forkEvery')) 
            forkEvery = project.forkEvery as int
        testLogging {
          events "passed", "skipped", "failed"
        }
    }

    task sourcesJar (type : Jar) {
      classifier = 'sources'
      from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn:javadoc) {
      classifier = 'javadoc'
      from javadoc.destinationDir
    }

    ext.standaloneMode = true

    sourceCompatibility=JavaVersion.VERSION_1_7
    targetCompatibility=JavaVersion.VERSION_1_7

    ext.jackson_version='2.4.4'
}

subprojects {
    apply plugin: 'eclipse'
     
    eclipse {
        ext.sourceCompatibility=JavaVersion.VERSION_1_7
        ext.targetCompatibility=JavaVersion.VERSION_1_7
        ext.downloadSources = true
        ext.downloadJavadoc = true
        classpath {
             containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
             containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
        }
    }
}
